{"version":3,"sources":["pages lazy /^/.//.*$/ groupOptions: {} namespace object","components/footer/index.tsx","router/config.ts","router/index.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","store.js","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","Copyright","Typography","variant","color","Link","href","Date","getFullYear","Footer","Box","sx","display","flexDirection","component","py","px","mt","backgroundColor","theme","palette","mode","grey","Container","maxWidth","routes","path","exact","Router","fallback","routeItem","lazy","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","form","reduxFormReducer","store","createStore","App","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"iGAAA,IAAIA,EAAM,CACT,SAAU,CACT,GACA,EACA,EACA,GAED,UAAW,CACV,GACA,EACA,EACA,GAED,eAAgB,CACf,GACA,EACA,EACA,GAED,mBAAoB,CACnB,GACA,EACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,WAAY,CACX,GACA,EACA,GAED,gBAAiB,CAChB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAON,QAAQQ,IAAIF,EAAIG,MAAM,GAAGd,IAAIG,EAAoBK,IAAID,MAAK,WAChE,OAAOJ,EAAoBS,MAG7BX,EAAoBc,KAAO,WAC1B,OAAOC,OAAOD,KAAKf,IAEpBC,EAAoBW,GAAK,IACzBK,EAAOC,QAAUjB,G,uIC1DjB,SAASkB,IACP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UACG,kBACD,cAACC,EAAA,EAAD,CAAMD,MAAM,UAAUE,KAAK,2BAA3B,sDAEQ,KACP,IAAIC,MAAOC,cACX,OAKQ,SAASC,IACtB,OACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,UAHnB,SAME,cAACH,EAAA,EAAD,CACEI,UAAU,SACVH,GAAI,CACFI,GAAI,EACJC,GAAI,EACJC,GAAI,OACJC,gBAAiB,SAACC,GAAD,MACQ,UAAvBA,EAAMC,QAAQC,KACVF,EAAMC,QAAQE,KAAK,KACnBH,EAAMC,QAAQE,KAAK,OAT7B,SAYE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACvB,EAAD,UCxCV,IAaiBwB,EAbF,CACX,CACEC,KAAM,CAAC,IAAK,SACZC,OAAO,EACPb,UAAW,QAEb,CACEY,KAAM,CAAC,UACPC,OAAO,EACPb,UAAW,UCkBFc,EApBA,WACb,OACE,eAAC,WAAD,CAAUC,SAAU,KAApB,UACE,cAAC,IAAD,UACGJ,EAAO3C,KAAI,SAACgD,GACX,OACE,cAAC,IAAD,CAEEJ,KAAMI,EAAUJ,KAChBC,MAAOG,EAAUH,MACjBb,UAAWiB,gBAAK,kBAAM,OAAO,YAAYD,EAAUhB,gBAH9CgB,EAAUhB,gBAQvB,cAACL,EAAD,QCVAuB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTlD,MAAK,SAACuD,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iCCNRO,EAAUC,YAAgB,CAC9BC,KAAMC,MAKOC,EAFDC,YAAYL,GCGpBM,EAAM,kBACV,cAAC,IAAD,UACE,cAAC,EAAD,OAIJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SHGnB,SAAkBpC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoC,IAAIC,GAAwB5C,OAAOC,SAAS7B,MACpDyE,SAAW7C,OAAOC,SAAS4C,OAIvC,OAGF7C,OAAO8C,iBAAiB,QAAQ,WAC9B,IAAMzC,EAAK,UAAMuC,GAAN,sBAEP9C,IAgEV,SAAiCO,EAAeC,GAE9CyC,MAAM1C,EAAO,CACX2C,QAAS,CAAE,iBAAkB,YAE5B7F,MAAK,SAAC8F,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9C,UAAUC,cAAc8C,MAAMnG,MAAK,SAACuD,GAClCA,EAAa6C,aAAapG,MAAK,WAC7B6C,OAAOC,SAASuD,eAKpBpD,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFVuC,CAAwBpD,EAAOC,GAI/BC,UAAUC,cAAc8C,MAAMnG,MAAK,WACjC8D,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,OGzB/BoD,GAKAnC,K","file":"static/js/main.a441f039.chunk.js","sourcesContent":["var map = {\n\t\"./Home\": [\n\t\t51,\n\t\t0,\n\t\t1,\n\t\t2\n\t],\n\t\"./Home/\": [\n\t\t51,\n\t\t0,\n\t\t1,\n\t\t2\n\t],\n\t\"./Home/index\": [\n\t\t51,\n\t\t0,\n\t\t1,\n\t\t2\n\t],\n\t\"./Home/index.tsx\": [\n\t\t51,\n\t\t0,\n\t\t1,\n\t\t2\n\t],\n\t\"./Login\": [\n\t\t52,\n\t\t0,\n\t\t3\n\t],\n\t\"./Login/\": [\n\t\t52,\n\t\t0,\n\t\t3\n\t],\n\t\"./Login/index\": [\n\t\t52,\n\t\t0,\n\t\t3\n\t],\n\t\"./Login/index.tsx\": [\n\t\t52,\n\t\t0,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 104;\nmodule.exports = webpackAsyncContext;","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        CRTNDRDRS. Todos los derechos reservados\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Box\n        component=\"footer\"\n        sx={{\n          py: 3,\n          px: 2,\n          mt: 'auto',\n          backgroundColor: (theme) =>\n            theme.palette.mode === 'light'\n              ? theme.palette.grey[200]\n              : theme.palette.grey[800],\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Copyright />\n        </Container>\n      </Box>\n    </Box>\n  );\n}","const routes = [\n    {\n      path: [\"/\", \"/home\"],\n      exact: true,\n      component: \"Home\",\n    },\n    {\n      path: [\"/login\"],\n      exact: true,\n      component: \"Login\"\n    }\n  ];\n  \n  export default routes;\n  ","import { lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Footer from \"../components/footer/index\";\n//import Header from \"../components/Header\";\nimport routes from \"./config\";\n//import { Styles } from \"../styles/styles\";\n\nconst Router = () => {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        {routes.map((routeItem) => {\n          return (\n            <Route\n              key={routeItem.component}\n              path={routeItem.path}\n              exact={routeItem.exact}\n              component={lazy(() => import(`../pages/${routeItem.component}`))}\n            />\n          );\n        })}\n      </Switch>\n      <Footer />\n    </Suspense>\n  );\n};\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from \"redux\";\nimport { reducer as reduxFormReducer } from \"redux-form\";\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./router\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst App = () => (\n  <BrowserRouter>\n    <Router />\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}